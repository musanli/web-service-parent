
package com.webservice.server.sei;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;

/**
 * This class was generated by the JAX-WS RI. JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "WeatherImpService", targetNamespace = "http://sei.server.webservice.com/", wsdlLocation = "http://127.0.0.1/weater/query?wsdl")
public class WeatherImpService extends Service {

	private final static URL WEATHERIMPSERVICE_WSDL_LOCATION;
	private final static WebServiceException WEATHERIMPSERVICE_EXCEPTION;
	private final static QName WEATHERIMPSERVICE_QNAME = new QName("http://sei.server.webservice.com/", "WeatherImpService");

	static {
		URL url = null;
		WebServiceException e = null;
		try {
			url = new URL("http://127.0.0.1:1234/weater/query?wsdl");
		} catch (MalformedURLException ex) {
			e = new WebServiceException(ex);
		}
		WEATHERIMPSERVICE_WSDL_LOCATION = url;
		WEATHERIMPSERVICE_EXCEPTION = e;
	}

	public WeatherImpService() {
		super(__getWsdlLocation(), WEATHERIMPSERVICE_QNAME);
	}

	public WeatherImpService(WebServiceFeature... features) {
		super(__getWsdlLocation(), WEATHERIMPSERVICE_QNAME, features);
	}

	public WeatherImpService(URL wsdlLocation) {
		super(wsdlLocation, WEATHERIMPSERVICE_QNAME);
	}

	public WeatherImpService(URL wsdlLocation, WebServiceFeature... features) {
		super(wsdlLocation, WEATHERIMPSERVICE_QNAME, features);
	}

	public WeatherImpService(URL wsdlLocation, QName serviceName) {
		super(wsdlLocation, serviceName);
	}

	public WeatherImpService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
		super(wsdlLocation, serviceName, features);
	}

	/**
	 * 
	 * @return returns WeatherImp
	 */
	@WebEndpoint(name = "WeatherImpPort")
	public WeatherImp getWeatherImpPort() {
		return super.getPort(new QName("http://sei.server.webservice.com/", "WeatherImpPort"), WeatherImp.class);
	}

	/**
	 * 
	 * @param features
	 *            A list of {@link javax.xml.ws.WebServiceFeature} to configure on
	 *            the proxy. Supported features not in the <code>features</code>
	 *            parameter will have their default values.
	 * @return returns WeatherImp
	 */
	@WebEndpoint(name = "WeatherImpPort")
	public WeatherImp getWeatherImpPort(WebServiceFeature... features) {
		return super.getPort(new QName("http://sei.server.webservice.com/", "WeatherImpPort"), WeatherImp.class, features);
	}

	private static URL __getWsdlLocation() {
		if (WEATHERIMPSERVICE_EXCEPTION != null) {
			throw WEATHERIMPSERVICE_EXCEPTION;
		}
		return WEATHERIMPSERVICE_WSDL_LOCATION;
	}

}
